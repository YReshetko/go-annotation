// Code generated by Constructor annotation processor. DO NOT EDIT.
// versions:
//		go-annotation: 0.0.2-alpha
//		Constructor: 0.0.2

package builder

import (
	http "net/http"
)

func NewFactory[V Builder[V, T], T any]() Factory[V, T] {
	return Factory[V, T]{
		registry: make(map[string]func() Builder[V, T]),
	}
}

type StructureForExample1Builder struct {
	value StructureForExample1
}

func NewStructureForExample1Builder() *StructureForExample1Builder {
	return &StructureForExample1Builder{}
}

func (b *StructureForExample1Builder) Field3(v string) *StructureForExample1Builder {
	b.value.Field3 = v
	return b
}

func (b *StructureForExample1Builder) Field1(v http.Client) *StructureForExample1Builder {
	b.value.Field1 = v
	return b
}

func (b *StructureForExample1Builder) Field2(v int) *StructureForExample1Builder {
	b.value.Field2 = v
	return b
}

func (b *StructureForExample1Builder) Build() *StructureForExample1 {

	return &b.value
}

type StructureForExample2Builder struct {
	value StructureForExample2
}

func NewStructureForExample2Builder() *StructureForExample2Builder {
	return &StructureForExample2Builder{}
}

func (b *StructureForExample2Builder) Field1(v http.Client) *StructureForExample2Builder {
	b.value.Field1 = v
	return b
}

func (b *StructureForExample2Builder) Field2(v int) *StructureForExample2Builder {
	b.value.Field2 = v
	return b
}

func (b *StructureForExample2Builder) Field3(v string) *StructureForExample2Builder {
	b.value.Field3 = v
	return b
}

func (b *StructureForExample2Builder) Build() *StructureForExample2 {

	return &b.value
}
